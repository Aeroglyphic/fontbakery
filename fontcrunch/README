Fontcrunch
5 Jul 2014
Raph Levien, Google

This is a tool for font optimization. It depends on fonttools, and has
some legacy dependencies on spiro-0.01, downloadable from here:

http://www.levien.com/spiro/spiro-0.01.tar.gz

To run, first do:

python fontcrunch.py gen yourfont.ttf

This creates 256 directories named 00 .. ff, and populates them with lots of
files with "bz" extension. Each of these is a nontrivial segment of quad
beziers cut from the font, stored as a "x0 y0 x1 y1 x2 y2" line per bezier.
Lines are represented with (x1, y1) at the midpoint of the two endpoints.

Next, run "make -j16" (or whatever level of parallelism makes sense on your
computer). This runs the optimizer on each of the .bz files, producing a .bzopt.
You can control the level of precision by editing "penalty" in the code (should
of course be a parameter). It tries to create a visual match using the smallest
number of TrueType points. Note that it counts on-curve points interpolated
between two off-curve points as "free". On a fast computer, it should go through
about 5 glyphs a second, depending on complexity.

Lastly, run:

python fontcrunch.py pack yourfont.ttf > /tmp/outlines.ps newfont.ttf

You can look at the outlines to check quality.